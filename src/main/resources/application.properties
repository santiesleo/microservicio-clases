server.port=8086
# Configuraci?n correcta para Spring Security y Keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/gimnasio
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/gimnasio/protocol/openid-connect/certs
keycloak.auth-server-url=http://localhost:8080/auth
keycloak.realm=gimnasio
keycloak.resource=clases-service
keycloak.public-client=false
keycloak.credentials.secret=eiMAWOPZlW8d6oiq4tUteKctJdL9sVmS
logging.level.org.springframework.security=debug
spring.kafka.bootstrap-servers=localhost:29092

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=monitoreo-grupo
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#logging.level.org.springframework.kafka=DEBUG
#logging.level.org.apache.kafka=DEBUG
log.retention.hours=168
log.segment.bytes=1073741824 
log.retention.check.interval.ms=300000

# Configuración de PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/microservicios
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Inicialización de la base de datos
spring.sql.init.mode=always
spring.jpa.hibernate.ddl-auto=update
